(window.webpackJsonp=window.webpackJsonp||[]).push([[183],{595:function(e,a,t){"use strict";t.r(a);var s=t(1),n=Object(s.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"x-slashing"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#x-slashing"}},[e._v("#")]),e._v(" "),t("code",[e._v("x/slashing")])]),e._v(" "),t("h2",{attrs:{id:"abstract"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#abstract"}},[e._v("#")]),e._v(" Abstract")]),e._v(" "),t("p",[e._v("This section specifies the slashing module of the Cosmos SDK, which implements functionality\nfirst outlined in the "),t("a",{attrs:{href:"https://cosmos.network/about/whitepaper",target:"_blank",rel:"noopener noreferrer"}},[e._v("Cosmos Whitepaper"),t("OutboundLink")],1),e._v(" in June 2016.")]),e._v(" "),t("p",[e._v('The slashing module enables Cosmos SDK-based blockchains to disincentivize any attributable action\nby a protocol-recognized actor with value at stake by penalizing them ("slashing").')]),e._v(" "),t("p",[e._v("Penalties may include, but are not limited to:")]),e._v(" "),t("ul",[t("li",[e._v("Burning some amount of their stake")]),e._v(" "),t("li",[e._v("Removing their ability to vote on future blocks for a period of time.")])]),e._v(" "),t("p",[e._v("This module will be used by the Cosmos Hub, the first hub in the Cosmos ecosystem.")]),e._v(" "),t("h2",{attrs:{id:"contents"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#contents"}},[e._v("#")]),e._v(" Contents")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#concepts"}},[e._v("Concepts")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#states"}},[e._v("States")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#tombstone-caps"}},[e._v("Tombstone Caps")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#infraction-timelines"}},[e._v("Infraction Timelines")])])])]),e._v(" "),t("li",[t("a",{attrs:{href:"#state"}},[e._v("State")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#signing-info-liveness"}},[e._v("Signing Info (Liveness)")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#params"}},[e._v("Params")])])])]),e._v(" "),t("li",[t("a",{attrs:{href:"#messages"}},[e._v("Messages")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#unjail"}},[e._v("Unjail")])])])]),e._v(" "),t("li",[t("a",{attrs:{href:"#beginblock"}},[e._v("BeginBlock")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#liveness-tracking"}},[e._v("Liveness Tracking")])])])]),e._v(" "),t("li",[t("a",{attrs:{href:"#hooks"}},[e._v("Hooks")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#events"}},[e._v("Events")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#staking-tombstone"}},[e._v("Staking Tombstone")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#parameters"}},[e._v("Parameters")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#cli"}},[e._v("CLI")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#query"}},[e._v("Query")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#transactions"}},[e._v("Transactions")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#grpc"}},[e._v("gRPC")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#rest"}},[e._v("REST")])])])])]),e._v(" "),t("h1",{attrs:{id:"concepts"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#concepts"}},[e._v("#")]),e._v(" Concepts")]),e._v(" "),t("h2",{attrs:{id:"states"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#states"}},[e._v("#")]),e._v(" States")]),e._v(" "),t("p",[e._v("At any given time, there are any number of validators registered in the state\nmachine. Each block, the top "),t("code",[e._v("MaxValidators")]),e._v(" (defined by "),t("code",[e._v("x/staking")]),e._v(") validators\nwho are not jailed become "),t("em",[e._v("bonded")]),e._v(", meaning that they may propose and vote on\nblocks. Validators who are "),t("em",[e._v("bonded")]),e._v(" are "),t("em",[e._v("at stake")]),e._v(", meaning that part or all of\ntheir stake and their delegators' stake is at risk if they commit a protocol fault.")]),e._v(" "),t("p",[e._v("For each of these validators we keep a "),t("code",[e._v("ValidatorSigningInfo")]),e._v(" record that contains\ninformation partaining to validator's liveness and other infraction related\nattributes.")]),e._v(" "),t("h2",{attrs:{id:"tombstone-caps"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tombstone-caps"}},[e._v("#")]),e._v(" Tombstone Caps")]),e._v(" "),t("p",[e._v("In order to mitigate the impact of initially likely categories of non-malicious\nprotocol faults, the Cosmos Hub implements for each validator\na "),t("em",[e._v("tombstone")]),e._v(" cap, which only allows a validator to be slashed once for a double\nsign fault. For example, if you misconfigure your HSM and double-sign a bunch of\nold blocks, you'll only be punished for the first double-sign (and then immediately tombstombed). This will still be quite expensive and desirable to avoid, but tombstone caps\nsomewhat blunt the economic impact of unintentional misconfiguration.")]),e._v(" "),t("p",[e._v('Liveness faults do not have caps, as they can\'t stack upon each other. Liveness bugs are "detected" as soon as the infraction occurs, and the validators are immediately put in jail, so it is not possible for them to commit multiple liveness faults without unjailing in between.')]),e._v(" "),t("h2",{attrs:{id:"infraction-timelines"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#infraction-timelines"}},[e._v("#")]),e._v(" Infraction Timelines")]),e._v(" "),t("p",[e._v("To illustrate how the "),t("code",[e._v("x/slashing")]),e._v(" module handles submitted evidence through\nTendermint consensus, consider the following examples:")]),e._v(" "),t("p",[t("strong",[e._v("Definitions")]),e._v(":")]),e._v(" "),t("p",[t("em",[e._v("[")]),e._v(" : timeline start"),t("br"),e._v(" "),t("em",[e._v("]")]),e._v(" : timeline end"),t("br"),e._v(" "),t("em",[e._v("C"),t("sub",[e._v("n")])]),e._v(" : infraction "),t("code",[e._v("n")]),e._v(" committed"),t("br"),e._v(" "),t("em",[e._v("D"),t("sub",[e._v("n")])]),e._v(" : infraction "),t("code",[e._v("n")]),e._v(" discovered"),t("br"),e._v(" "),t("em",[e._v("V"),t("sub",[e._v("b")])]),e._v(" : validator bonded"),t("br"),e._v(" "),t("em",[e._v("V"),t("sub",[e._v("u")])]),e._v(" : validator unbonded")]),e._v(" "),t("h3",{attrs:{id:"single-double-sign-infraction"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#single-double-sign-infraction"}},[e._v("#")]),e._v(" Single Double Sign Infraction")]),e._v(" "),t("p",[e._v("[----------C"),t("sub",[e._v("1")]),e._v("----D"),t("sub",[e._v("1")]),e._v(",V"),t("sub",[e._v("u")]),e._v("-----]")]),e._v(" "),t("p",[e._v("A single infraction is committed then later discovered, at which point the\nvalidator is unbonded and slashed at the full amount for the infraction.")]),e._v(" "),t("h3",{attrs:{id:"multiple-double-sign-infractions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#multiple-double-sign-infractions"}},[e._v("#")]),e._v(" Multiple Double Sign Infractions")]),e._v(" "),t("p",[e._v("[----------C"),t("sub",[e._v("1")]),e._v("--C"),t("sub",[e._v("2")]),e._v("---C"),t("sub",[e._v("3")]),e._v("---D"),t("sub",[e._v("1")]),e._v(",D"),t("sub",[e._v("2")]),e._v(",D"),t("sub",[e._v("3")]),e._v("V"),t("sub",[e._v("u")]),e._v("-----]")]),e._v(" "),t("p",[e._v("Multiple infractions are committed and then later discovered, at which point the\nvalidator is jailed and slashed for only one infraction. Because the validator\nis also tombstoned, they can not rejoin the validator set.")]),e._v(" "),t("h1",{attrs:{id:"state"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#state"}},[e._v("#")]),e._v(" State")]),e._v(" "),t("h2",{attrs:{id:"signing-info-liveness"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#signing-info-liveness"}},[e._v("#")]),e._v(" Signing Info (Liveness)")]),e._v(" "),t("p",[e._v("Every block includes a set of precommits by the validators for the previous block,\nknown as the "),t("code",[e._v("LastCommitInfo")]),e._v(" provided by Tendermint. A "),t("code",[e._v("LastCommitInfo")]),e._v(" is valid so\nlong as it contains precommits from +2/3 of total voting power.")]),e._v(" "),t("p",[e._v("Proposers are incentivized to include precommits from all validators in the Tendermint "),t("code",[e._v("LastCommitInfo")]),e._v("\nby receiving additional fees proportional to the difference between the voting\npower included in the "),t("code",[e._v("LastCommitInfo")]),e._v(" and +2/3 (see "),t("RouterLink",{attrs:{to:"/modules/slashing/x/distribution/spec/03_begin_block.html"}},[e._v("fee distribution")]),e._v(").")],1),e._v(" "),t("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"dHlwZSBMYXN0Q29tbWl0SW5mbyBzdHJ1Y3QgewoJUm91bmQgaW50MzIKCVZvdGVzIFtdVm90ZUluZm8KfQo="}}),e._v(" "),t("p",[e._v("Validators are penalized for failing to be included in the "),t("code",[e._v("LastCommitInfo")]),e._v(" for some\nnumber of blocks by being automatically jailed, potentially slashed, and unbonded.")]),e._v(" "),t("p",[e._v("Information about validator's liveness activity is tracked through "),t("code",[e._v("ValidatorSigningInfo")]),e._v(".\nIt is indexed in the store as follows:")]),e._v(" "),t("ul",[t("li",[e._v("ValidatorSigningInfo: "),t("code",[e._v("0x01 | ConsAddrLen (1 byte) | ConsAddress -> ProtocolBuffer(ValSigningInfo)")])]),e._v(" "),t("li",[e._v("MissedBlocksBitArray: "),t("code",[e._v("0x02 | ConsAddrLen (1 byte) | ConsAddress | LittleEndianUint64(signArrayIndex) -> VarInt(didMiss)")]),e._v(" (varint is a number encoding format)")])]),e._v(" "),t("p",[e._v("The first mapping allows us to easily lookup the recent signing info for a\nvalidator based on the validator's consensus address.")]),e._v(" "),t("p",[e._v("The second mapping ("),t("code",[e._v("MissedBlocksBitArray")]),e._v(") acts\nas a bit-array of size "),t("code",[e._v("SignedBlocksWindow")]),e._v(" that tells us if the validator missed\nthe block for a given index in the bit-array. The index in the bit-array is given\nas little endian uint64.\nThe result is a "),t("code",[e._v("varint")]),e._v(" that takes on "),t("code",[e._v("0")]),e._v(" or "),t("code",[e._v("1")]),e._v(", where "),t("code",[e._v("0")]),e._v(" indicates the\nvalidator did not miss (did sign) the corresponding block, and "),t("code",[e._v("1")]),e._v(" indicates\nthey missed the block (did not sign).")]),e._v(" "),t("p",[e._v("Note that the "),t("code",[e._v("MissedBlocksBitArray")]),e._v(" is not explicitly initialized up-front. Keys\nare added as we progress through the first "),t("code",[e._v("SignedBlocksWindow")]),e._v(" blocks for a newly\nbonded validator. The "),t("code",[e._v("SignedBlocksWindow")]),e._v(" parameter defines the size\n(number of blocks) of the sliding window used to track validator liveness.")]),e._v(" "),t("p",[e._v("The information stored for tracking validator liveness is as follows:")]),e._v(" "),t("p",[t("tm-code-block",{staticClass:"codeblock",attrs:{language:"false",base64:"Ly8gVmFsaWRhdG9yU2lnbmluZ0luZm8gZGVmaW5lcyBhIHZhbGlkYXRvcidzIHNpZ25pbmcgaW5mbyBmb3IgbW9uaXRvcmluZyB0aGVpcgovLyBsaXZlbmVzcyBhY3Rpdml0eS4KbWVzc2FnZSBWYWxpZGF0b3JTaWduaW5nSW5mbyB7CiAgb3B0aW9uIChnb2dvcHJvdG8uZXF1YWwpICAgICAgICAgICAgPSB0cnVlOwogIG9wdGlvbiAoZ29nb3Byb3RvLmdvcHJvdG9fc3RyaW5nZXIpID0gZmFsc2U7CgogIHN0cmluZyBhZGRyZXNzID0gMSBbKGNvc21vc19wcm90by5zY2FsYXIpID0gJnF1b3Q7Y29zbW9zLkFkZHJlc3NTdHJpbmcmcXVvdDtdOwogIC8vIEhlaWdodCBhdCB3aGljaCB2YWxpZGF0b3Igd2FzIGZpcnN0IGEgY2FuZGlkYXRlIE9SIHdhcyB1bmphaWxlZAogIGludDY0IHN0YXJ0X2hlaWdodCA9IDI7CiAgLy8gSW5kZXggd2hpY2ggaXMgaW5jcmVtZW50ZWQgZWFjaCB0aW1lIHRoZSB2YWxpZGF0b3Igd2FzIGEgYm9uZGVkCiAgLy8gaW4gYSBibG9jayBhbmQgbWF5IGhhdmUgc2lnbmVkIGEgcHJlY29tbWl0IG9yIG5vdC4gVGhpcyBpbiBjb25qdW5jdGlvbiB3aXRoIHRoZQogIC8vIGBTaWduZWRCbG9ja3NXaW5kb3dgIHBhcmFtIGRldGVybWluZXMgdGhlIGluZGV4IGluIHRoZSBgTWlzc2VkQmxvY2tzQml0QXJyYXlgLgogIGludDY0IGluZGV4X29mZnNldCA9IDM7CiAgLy8gVGltZXN0YW1wIHVudGlsIHdoaWNoIHRoZSB2YWxpZGF0b3IgaXMgamFpbGVkIGR1ZSB0byBsaXZlbmVzcyBkb3dudGltZS4KICBnb29nbGUucHJvdG9idWYuVGltZXN0YW1wIGphaWxlZF91bnRpbCA9IDQgWyhnb2dvcHJvdG8uc3RkdGltZSkgPSB0cnVlLCAoZ29nb3Byb3RvLm51bGxhYmxlKSA9IGZhbHNlXTsKICAvLyBXaGV0aGVyIG9yIG5vdCBhIHZhbGlkYXRvciBoYXMgYmVlbiB0b21ic3RvbmVkIChraWxsZWQgb3V0IG9mIHZhbGlkYXRvciBzZXQpLiBJdCBpcyBzZXQKICAvLyBvbmNlIHRoZSB2YWxpZGF0b3IgY29tbWl0cyBhbiBlcXVpdm9jYXRpb24gb3IgZm9yIGFueSBvdGhlciBjb25maWd1cmVkIG1pc2JlaGlhdm9yLgogIGJvb2wgdG9tYnN0b25lZCA9IDU7CiAgLy8gQSBjb3VudGVyIGtlcHQgdG8gYXZvaWQgdW5uZWNlc3NhcnkgYXJyYXkgcmVhZHMuCiAgLy8gTm90ZSB0aGF0IGBTdW0oTWlzc2VkQmxvY2tzQml0QXJyYXkpYCBhbHdheXMgZXF1YWxzIGBNaXNzZWRCbG9ja3NDb3VudGVyYC4KICBpbnQ2NCBtaXNzZWRfYmxvY2tzX2NvdW50ZXIgPSA2Owp9"}})],1),e._v(" "),t("h2",{attrs:{id:"params"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#params"}},[e._v("#")]),e._v(" Params")]),e._v(" "),t("p",[e._v("The slashing module stores it's params in state with the prefix of "),t("code",[e._v("0x00")]),e._v(",\nit can be updated with governance or the address with authority.")]),e._v(" "),t("ul",[t("li",[e._v("Params: "),t("code",[e._v("0x00 | ProtocolBuffer(Params)")])])]),e._v(" "),t("p",[t("tm-code-block",{staticClass:"codeblock",attrs:{language:"false",base64:"Ly8gUGFyYW1zIHJlcHJlc2VudHMgdGhlIHBhcmFtZXRlcnMgdXNlZCBmb3IgYnkgdGhlIHNsYXNoaW5nIG1vZHVsZS4KbWVzc2FnZSBQYXJhbXMgewogIGludDY0IHNpZ25lZF9ibG9ja3Nfd2luZG93ICA9IDE7CiAgYnl0ZXMgbWluX3NpZ25lZF9wZXJfd2luZG93ID0gMgogICAgICBbKGdvZ29wcm90by5jdXN0b210eXBlKSA9ICZxdW90O2dpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvdHlwZXMuRGVjJnF1b3Q7LCAoZ29nb3Byb3RvLm51bGxhYmxlKSA9IGZhbHNlXTsKICBnb29nbGUucHJvdG9idWYuRHVyYXRpb24gZG93bnRpbWVfamFpbF9kdXJhdGlvbiA9IDMgWyhnb2dvcHJvdG8ubnVsbGFibGUpID0gZmFsc2UsIChnb2dvcHJvdG8uc3RkZHVyYXRpb24pID0gdHJ1ZV07CiAgYnl0ZXMgICAgICAgICAgICAgICAgICAgIHNsYXNoX2ZyYWN0aW9uX2RvdWJsZV9zaWduID0gNAogICAgICBbKGdvZ29wcm90by5jdXN0b210eXBlKSA9ICZxdW90O2dpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvdHlwZXMuRGVjJnF1b3Q7LCAoZ29nb3Byb3RvLm51bGxhYmxlKSA9IGZhbHNlXTsKICBieXRlcyBzbGFzaF9mcmFjdGlvbl9kb3dudGltZSA9IDUKICAgICAgWyhnb2dvcHJvdG8uY3VzdG9tdHlwZSkgPSAmcXVvdDtnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3R5cGVzLkRlYyZxdW90OywgKGdvZ29wcm90by5udWxsYWJsZSkgPSBmYWxzZV07Cn0="}})],1),e._v(" "),t("h1",{attrs:{id:"messages"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#messages"}},[e._v("#")]),e._v(" Messages")]),e._v(" "),t("p",[e._v("In this section we describe the processing of messages for the "),t("code",[e._v("slashing")]),e._v(" module.")]),e._v(" "),t("h2",{attrs:{id:"unjail"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#unjail"}},[e._v("#")]),e._v(" Unjail")]),e._v(" "),t("p",[e._v("If a validator was automatically unbonded due to downtime and wishes to come back online &\npossibly rejoin the bonded set, it must send "),t("code",[e._v("MsgUnjail")]),e._v(":")]),e._v(" "),t("tm-code-block",{staticClass:"codeblock",attrs:{language:"protobuf",base64:"Ly8gTXNnVW5qYWlsIGlzIGFuIHNkay5Nc2cgdXNlZCBmb3IgdW5qYWlsaW5nIGEgamFpbGVkIHZhbGlkYXRvciwgdGh1cyByZXR1cm5pbmcKLy8gdGhlbSBpbnRvIHRoZSBib25kZWQgdmFsaWRhdG9yIHNldCwgc28gdGhleSBjYW4gYmVnaW4gcmVjZWl2aW5nIHByb3Zpc2lvbnMKLy8gYW5kIHJld2FyZHMgYWdhaW4uCm1lc3NhZ2UgTXNnVW5qYWlsIHsKICBzdHJpbmcgdmFsaWRhdG9yX2FkZHIgPSAxOwp9Cg=="}}),e._v(" "),t("p",[e._v("Below is a pseudocode of the "),t("code",[e._v("MsgSrv/Unjail")]),e._v(" RPC:")]),e._v(" "),t("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"dW5qYWlsKHR4IE1zZ1VuamFpbCkKICAgIHZhbGlkYXRvciA9IGdldFZhbGlkYXRvcih0eC5WYWxpZGF0b3JBZGRyKQogICAgaWYgdmFsaWRhdG9yID09IG5pbAogICAgICBmYWlsIHdpdGggJnF1b3Q7Tm8gdmFsaWRhdG9yIGZvdW5kJnF1b3Q7CgogICAgaWYgZ2V0U2VsZkRlbGVnYXRpb24odmFsaWRhdG9yKSA9PSAwCiAgICAgIGZhaWwgd2l0aCAmcXVvdDt2YWxpZGF0b3IgbXVzdCBzZWxmIGRlbGVnYXRlIGJlZm9yZSB1bmphaWxpbmcmcXVvdDsKCiAgICBpZiAhdmFsaWRhdG9yLkphaWxlZAogICAgICBmYWlsIHdpdGggJnF1b3Q7VmFsaWRhdG9yIG5vdCBqYWlsZWQsIGNhbm5vdCB1bmphaWwmcXVvdDsKCiAgICBpbmZvID0gR2V0VmFsaWRhdG9yU2lnbmluZ0luZm8ob3BlcmF0b3IpCiAgICBpZiBpbmZvLlRvbWJzdG9uZWQKICAgICAgZmFpbCB3aXRoICZxdW90O1RvbWJzdG9uZWQgdmFsaWRhdG9yIGNhbm5vdCBiZSB1bmphaWxlZCZxdW90OwogICAgaWYgYmxvY2sgdGltZSAmbHQ7IGluZm8uSmFpbGVkVW50aWwKICAgICAgZmFpbCB3aXRoICZxdW90O1ZhbGlkYXRvciBzdGlsbCBqYWlsZWQsIGNhbm5vdCB1bmphaWwgdW50aWwgcGVyaW9kIGhhcyBleHBpcmVkJnF1b3Q7CgogICAgdmFsaWRhdG9yLkphaWxlZCA9IGZhbHNlCiAgICBzZXRWYWxpZGF0b3IodmFsaWRhdG9yKQoKICAgIHJldHVybgo="}}),e._v(" "),t("p",[e._v("If the validator has enough stake to be in the top "),t("code",[e._v("n = MaximumBondedValidators")]),e._v(", it will be automatically rebonded,\nand all delegators still delegated to the validator will be rebonded and begin to again collect\nprovisions and rewards.")]),e._v(" "),t("h1",{attrs:{id:"beginblock"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#beginblock"}},[e._v("#")]),e._v(" BeginBlock")]),e._v(" "),t("h2",{attrs:{id:"liveness-tracking"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#liveness-tracking"}},[e._v("#")]),e._v(" Liveness Tracking")]),e._v(" "),t("p",[e._v("At the beginning of each block, we update the "),t("code",[e._v("ValidatorSigningInfo")]),e._v(" for each\nvalidator and check if they've crossed below the liveness threshold over a\nsliding window. This sliding window is defined by "),t("code",[e._v("SignedBlocksWindow")]),e._v(" and the\nindex in this window is determined by "),t("code",[e._v("IndexOffset")]),e._v(" found in the validator's\n"),t("code",[e._v("ValidatorSigningInfo")]),e._v(". For each block processed, the "),t("code",[e._v("IndexOffset")]),e._v(" is incremented\nregardless if the validator signed or not. Once the index is determined, the\n"),t("code",[e._v("MissedBlocksBitArray")]),e._v(" and "),t("code",[e._v("MissedBlocksCounter")]),e._v(" are updated accordingly.")]),e._v(" "),t("p",[e._v("Finally, in order to determine if a validator crosses below the liveness threshold,\nwe fetch the maximum number of blocks missed, "),t("code",[e._v("maxMissed")]),e._v(", which is\n"),t("code",[e._v("SignedBlocksWindow - (MinSignedPerWindow * SignedBlocksWindow)")]),e._v(" and the minimum\nheight at which we can determine liveness, "),t("code",[e._v("minHeight")]),e._v(". If the current block is\ngreater than "),t("code",[e._v("minHeight")]),e._v(" and the validator's "),t("code",[e._v("MissedBlocksCounter")]),e._v(" is greater than\n"),t("code",[e._v("maxMissed")]),e._v(", they will be slashed by "),t("code",[e._v("SlashFractionDowntime")]),e._v(", will be jailed\nfor "),t("code",[e._v("DowntimeJailDuration")]),e._v(", and have the following values reset:\n"),t("code",[e._v("MissedBlocksBitArray")]),e._v(", "),t("code",[e._v("MissedBlocksCounter")]),e._v(", and "),t("code",[e._v("IndexOffset")]),e._v(".")]),e._v(" "),t("p",[t("strong",[e._v("Note")]),e._v(": Liveness slashes do "),t("strong",[e._v("NOT")]),e._v(" lead to a tombstombing.")]),e._v(" "),t("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"aGVpZ2h0IDo9IGJsb2NrLkhlaWdodAoKZm9yIHZvdGUgaW4gYmxvY2suTGFzdENvbW1pdEluZm8uVm90ZXMgewogIHNpZ25JbmZvIDo9IEdldFZhbGlkYXRvclNpZ25pbmdJbmZvKHZvdGUuVmFsaWRhdG9yLkFkZHJlc3MpCgogIC8vIFRoaXMgaXMgYSByZWxhdGl2ZSBpbmRleCwgc28gd2UgY291bnRzIGJsb2NrcyB0aGUgdmFsaWRhdG9yIFNIT1VMRCBoYXZlCiAgLy8gc2lnbmVkLiBXZSB1c2UgdGhlIDAtdmFsdWUgZGVmYXVsdCBzaWduaW5nIGluZm8gaWYgbm90IHByZXNlbnQsIGV4Y2VwdCBmb3IKICAvLyBzdGFydCBoZWlnaHQuCiAgaW5kZXggOj0gc2lnbkluZm8uSW5kZXhPZmZzZXQgJSBTaWduZWRCbG9ja3NXaW5kb3coKQogIHNpZ25JbmZvLkluZGV4T2Zmc2V0KysKCiAgLy8gVXBkYXRlIE1pc3NlZEJsb2Nrc0JpdEFycmF5IGFuZCBNaXNzZWRCbG9ja3NDb3VudGVyLiBUaGUgTWlzc2VkQmxvY2tzQ291bnRlcgogIC8vIGp1c3QgdHJhY2tzIHRoZSBzdW0gb2YgTWlzc2VkQmxvY2tzQml0QXJyYXkuIFRoYXQgd2F5IHdlIGF2b2lkIG5lZWRpbmcgdG8KICAvLyByZWFkL3dyaXRlIHRoZSB3aG9sZSBhcnJheSBlYWNoIHRpbWUuCiAgbWlzc2VkUHJldmlvdXMgOj0gR2V0VmFsaWRhdG9yTWlzc2VkQmxvY2tCaXRBcnJheSh2b3RlLlZhbGlkYXRvci5BZGRyZXNzLCBpbmRleCkKICBtaXNzZWQgOj0gIXNpZ25lZAoKICBzd2l0Y2ggewogIGNhc2UgIW1pc3NlZFByZXZpb3VzICZhbXA7JmFtcDsgbWlzc2VkOgogICAgLy8gYXJyYXkgaW5kZXggaGFzIGNoYW5nZWQgZnJvbSBub3QgbWlzc2VkIHRvIG1pc3NlZCwgaW5jcmVtZW50IGNvdW50ZXIKICAgIFNldFZhbGlkYXRvck1pc3NlZEJsb2NrQml0QXJyYXkodm90ZS5WYWxpZGF0b3IuQWRkcmVzcywgaW5kZXgsIHRydWUpCiAgICBzaWduSW5mby5NaXNzZWRCbG9ja3NDb3VudGVyKysKCiAgY2FzZSBtaXNzZWRQcmV2aW91cyAmYW1wOyZhbXA7ICFtaXNzZWQ6CiAgICAvLyBhcnJheSBpbmRleCBoYXMgY2hhbmdlZCBmcm9tIG1pc3NlZCB0byBub3QgbWlzc2VkLCBkZWNyZW1lbnQgY291bnRlcgogICAgU2V0VmFsaWRhdG9yTWlzc2VkQmxvY2tCaXRBcnJheSh2b3RlLlZhbGlkYXRvci5BZGRyZXNzLCBpbmRleCwgZmFsc2UpCiAgICBzaWduSW5mby5NaXNzZWRCbG9ja3NDb3VudGVyLS0KCiAgZGVmYXVsdDoKICAgIC8vIGFycmF5IGluZGV4IGF0IHRoaXMgaW5kZXggaGFzIG5vdCBjaGFuZ2VkOyBubyBuZWVkIHRvIHVwZGF0ZSBjb3VudGVyCiAgfQoKICBpZiBtaXNzZWQgewogICAgLy8gZW1pdCBldmVudHMuLi4KICB9CgogIG1pbkhlaWdodCA6PSBzaWduSW5mby5TdGFydEhlaWdodCArIFNpZ25lZEJsb2Nrc1dpbmRvdygpCiAgbWF4TWlzc2VkIDo9IFNpZ25lZEJsb2Nrc1dpbmRvdygpIC0gTWluU2lnbmVkUGVyV2luZG93KCkKCiAgLy8gSWYgd2UgYXJlIHBhc3QgdGhlIG1pbmltdW0gaGVpZ2h0IGFuZCB0aGUgdmFsaWRhdG9yIGhhcyBtaXNzZWQgdG9vIG1hbnkKICAvLyBqYWlsIGFuZCBzbGFzaCB0aGVtLgogIGlmIGhlaWdodCAmZ3Q7IG1pbkhlaWdodCAmYW1wOyZhbXA7IHNpZ25JbmZvLk1pc3NlZEJsb2Nrc0NvdW50ZXIgJmd0OyBtYXhNaXNzZWQgewogICAgdmFsaWRhdG9yIDo9IFZhbGlkYXRvckJ5Q29uc0FkZHIodm90ZS5WYWxpZGF0b3IuQWRkcmVzcykKCiAgICAvLyBlbWl0IGV2ZW50cy4uLgoKICAgIC8vIFdlIG5lZWQgdG8gcmV0cmlldmUgdGhlIHN0YWtlIGRpc3RyaWJ1dGlvbiB3aGljaCBzaWduZWQgdGhlIGJsb2NrLCBzbyB3ZQogICAgLy8gc3VidHJhY3QgVmFsaWRhdG9yVXBkYXRlRGVsYXkgZnJvbSB0aGUgYmxvY2sgaGVpZ2h0LCBhbmQgc3VidHJhY3QgYW4KICAgIC8vIGFkZGl0aW9uYWwgMSBzaW5jZSB0aGlzIGlzIHRoZSBMYXN0Q29tbWl0LgogICAgLy8KICAgIC8vIE5vdGUsIHRoYXQgdGhpcyBDQU4gcmVzdWx0IGluIGEgbmVnYXRpdmUgJnF1b3Q7ZGlzdHJpYnV0aW9uSGVpZ2h0JnF1b3Q7IHVwIHRvCiAgICAvLyAtVmFsaWRhdG9yVXBkYXRlRGVsYXktMSwgaS5lLiBhdCB0aGUgZW5kIG9mIHRoZSBwcmUtZ2VuZXNpcyBibG9jayAobm9uZSkgPSBhdCB0aGUgYmVnaW5uaW5nIG9mIHRoZSBnZW5lc2lzIGJsb2NrLgogICAgLy8gVGhhdCdzIGZpbmUgc2luY2UgdGhpcyBpcyBqdXN0IHVzZWQgdG8gZmlsdGVyIHVuYm9uZGluZyBkZWxlZ2F0aW9ucyAmYW1wOyByZWRlbGVnYXRpb25zLgogICAgZGlzdHJpYnV0aW9uSGVpZ2h0IDo9IGhlaWdodCAtIHNkay5WYWxpZGF0b3JVcGRhdGVEZWxheSAtIDEKCiAgICBTbGFzaCh2b3RlLlZhbGlkYXRvci5BZGRyZXNzLCBkaXN0cmlidXRpb25IZWlnaHQsIHZvdGUuVmFsaWRhdG9yLlBvd2VyLCBTbGFzaEZyYWN0aW9uRG93bnRpbWUoKSkKICAgIEphaWwodm90ZS5WYWxpZGF0b3IuQWRkcmVzcykKCiAgICBzaWduSW5mby5KYWlsZWRVbnRpbCA9IGJsb2NrLlRpbWUuQWRkKERvd250aW1lSmFpbER1cmF0aW9uKCkpCgogICAgLy8gV2UgbmVlZCB0byByZXNldCB0aGUgY291bnRlciAmYW1wOyBhcnJheSBzbyB0aGF0IHRoZSB2YWxpZGF0b3Igd29uJ3QgYmUKICAgIC8vIGltbWVkaWF0ZWx5IHNsYXNoZWQgZm9yIGRvd250aW1lIHVwb24gcmVib25kaW5nLgogICAgc2lnbkluZm8uTWlzc2VkQmxvY2tzQ291bnRlciA9IDAKICAgIHNpZ25JbmZvLkluZGV4T2Zmc2V0ID0gMAogICAgQ2xlYXJWYWxpZGF0b3JNaXNzZWRCbG9ja0JpdEFycmF5KHZvdGUuVmFsaWRhdG9yLkFkZHJlc3MpCiAgfQoKICBTZXRWYWxpZGF0b3JTaWduaW5nSW5mbyh2b3RlLlZhbGlkYXRvci5BZGRyZXNzLCBzaWduSW5mbykKfQo="}}),e._v(" "),t("h1",{attrs:{id:"hooks"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hooks"}},[e._v("#")]),e._v(" Hooks")]),e._v(" "),t("p",[e._v("This section contains a description of the module's "),t("code",[e._v("hooks")]),e._v(". Hooks are operations that are executed automatically when events are raised.")]),e._v(" "),t("h2",{attrs:{id:"staking-hooks"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#staking-hooks"}},[e._v("#")]),e._v(" Staking hooks")]),e._v(" "),t("p",[e._v("The slashing module implements the "),t("code",[e._v("StakingHooks")]),e._v(" defined in "),t("code",[e._v("x/staking")]),e._v(" and are used as record-keeping of validators information. During the app initialization, these hooks should be registered in the staking module struct.")]),e._v(" "),t("p",[e._v("The following hooks impact the slashing state:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("AfterValidatorBonded")]),e._v(" creates a "),t("code",[e._v("ValidatorSigningInfo")]),e._v(" instance as described in the following section.")]),e._v(" "),t("li",[t("code",[e._v("AfterValidatorCreated")]),e._v(" stores a validator's consensus key.")]),e._v(" "),t("li",[t("code",[e._v("AfterValidatorRemoved")]),e._v(" removes a validator's consensus key.")])]),e._v(" "),t("h2",{attrs:{id:"validator-bonded"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#validator-bonded"}},[e._v("#")]),e._v(" Validator Bonded")]),e._v(" "),t("p",[e._v("Upon successful first-time bonding of a new validator, we create a new "),t("code",[e._v("ValidatorSigningInfo")]),e._v(" structure for the\nnow-bonded validator, which "),t("code",[e._v("StartHeight")]),e._v(" of the current block.")]),e._v(" "),t("p",[e._v("If the validator was out of the validator set and gets bonded again, its new bonded height is set.")]),e._v(" "),t("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"b25WYWxpZGF0b3JCb25kZWQoYWRkcmVzcyBzZGsuVmFsQWRkcmVzcykKCiAgc2lnbmluZ0luZm8sIGZvdW5kID0gR2V0VmFsaWRhdG9yU2lnbmluZ0luZm8oYWRkcmVzcykKICBpZiAhZm91bmQgewogICAgc2lnbmluZ0luZm8gPSBWYWxpZGF0b3JTaWduaW5nSW5mbyB7CiAgICAgIFN0YXJ0SGVpZ2h0ICAgICAgICAgOiBDdXJyZW50SGVpZ2h0LAogICAgICBJbmRleE9mZnNldCAgICAgICAgIDogMCwKICAgICAgSmFpbGVkVW50aWwgICAgICAgICA6IHRpbWUuVW5peCgwLCAwKSwKICAgICAgVG9tYnN0b25lICAgICAgICAgICA6IGZhbHNlLAogICAgICBNaXNzZWRCbG9za0NvdW50ZXIgIDogMAogICAgfSBlbHNlIHsKICAgICAgc2lnbmluZ0luZm8uU3RhcnRIZWlnaHQgPSBDdXJyZW50SGVpZ2h0CiAgICB9CgogICAgc2V0VmFsaWRhdG9yU2lnbmluZ0luZm8oc2lnbmluZ0luZm8pCiAgfQoKICByZXR1cm4K"}}),e._v(" "),t("h1",{attrs:{id:"events"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#events"}},[e._v("#")]),e._v(" Events")]),e._v(" "),t("p",[e._v("The slashing module emits the following events:")]),e._v(" "),t("h2",{attrs:{id:"msgserver"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#msgserver"}},[e._v("#")]),e._v(" MsgServer")]),e._v(" "),t("h3",{attrs:{id:"msgunjail"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#msgunjail"}},[e._v("#")]),e._v(" MsgUnjail")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Type")]),e._v(" "),t("th",[e._v("Attribute Key")]),e._v(" "),t("th",[e._v("Attribute Value")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("message")]),e._v(" "),t("td",[e._v("module")]),e._v(" "),t("td",[e._v("slashing")])]),e._v(" "),t("tr",[t("td",[e._v("message")]),e._v(" "),t("td",[e._v("sender")]),e._v(" "),t("td")])])]),e._v(" "),t("h2",{attrs:{id:"keeper"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#keeper"}},[e._v("#")]),e._v(" Keeper")]),e._v(" "),t("h2",{attrs:{id:"beginblocker-handlevalidatorsignature"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#beginblocker-handlevalidatorsignature"}},[e._v("#")]),e._v(" BeginBlocker: HandleValidatorSignature")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Type")]),e._v(" "),t("th",[e._v("Attribute Key")]),e._v(" "),t("th",[e._v("Attribute Value")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("slash")]),e._v(" "),t("td",[e._v("address")]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[e._v("slash")]),e._v(" "),t("td",[e._v("power")]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[e._v("slash")]),e._v(" "),t("td",[e._v("reason")]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[e._v("slash")]),e._v(" "),t("td",[e._v("jailed [0]")]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[e._v("slash")]),e._v(" "),t("td",[e._v("burned coins")]),e._v(" "),t("td")])])]),e._v(" "),t("ul",[t("li",[e._v("[0] Only included if the validator is jailed.")])]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Type")]),e._v(" "),t("th",[e._v("Attribute Key")]),e._v(" "),t("th",[e._v("Attribute Value")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("liveness")]),e._v(" "),t("td",[e._v("address")]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[e._v("liveness")]),e._v(" "),t("td",[e._v("missed_blocks")]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[e._v("liveness")]),e._v(" "),t("td",[e._v("height")]),e._v(" "),t("td")])])]),e._v(" "),t("h3",{attrs:{id:"slash"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#slash"}},[e._v("#")]),e._v(" Slash")]),e._v(" "),t("ul",[t("li",[e._v("same as "),t("code",[e._v('"slash"')]),e._v(" event from "),t("code",[e._v("HandleValidatorSignature")]),e._v(", but without the "),t("code",[e._v("jailed")]),e._v(" attribute.")])]),e._v(" "),t("h3",{attrs:{id:"jail"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jail"}},[e._v("#")]),e._v(" Jail")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Type")]),e._v(" "),t("th",[e._v("Attribute Key")]),e._v(" "),t("th",[e._v("Attribute Value")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("slash")]),e._v(" "),t("td",[e._v("jailed")]),e._v(" "),t("td")])])]),e._v(" "),t("h1",{attrs:{id:"staking-tombstone"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#staking-tombstone"}},[e._v("#")]),e._v(" Staking Tombstone")]),e._v(" "),t("h2",{attrs:{id:"abstract-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#abstract-2"}},[e._v("#")]),e._v(" Abstract")]),e._v(" "),t("p",[e._v("In the current implementation of the "),t("code",[e._v("slashing")]),e._v(' module, when the consensus engine\ninforms the state machine of a validator\'s consensus fault, the validator is\npartially slashed, and put into a "jail period", a period of time in which they\nare not allowed to rejoin the validator set. However, because of the nature of\nconsensus faults and ABCI, there can be a delay between an infraction occurring,\nand evidence of the infraction reaching the state machine (this is one of the\nprimary reasons for the existence of the unbonding period).')]),e._v(" "),t("blockquote",[t("p",[e._v("Note: The tombstone concept, only applies to faults that have a delay between\nthe infraction occurring and evidence reaching the state machine. For example,\nevidence of a validator double signing may take a while to reach the state machine\ndue to unpredictable evidence gossip layer delays and the ability of validators to\nselectively reveal double-signatures (e.g. to infrequently-online light clients).\nLiveness slashing, on the other hand, is detected immediately as soon as the\ninfraction occurs, and therefore no slashing period is needed. A validator is\nimmediately put into jail period, and they cannot commit another liveness fault\nuntil they unjail. In the future, there may be other types of byzantine faults\nthat have delays (for example, submitting evidence of an invalid proposal as a transaction).\nWhen implemented, it will have to be decided whether these future types of\nbyzantine faults will result in a tombstoning (and if not, the slash amounts\nwill not be capped by a slashing period).")])]),e._v(" "),t("p",[e._v("In the current system design, once a validator is put in the jail for a consensus\nfault, after the "),t("code",[e._v("JailPeriod")]),e._v(" they are allowed to send a transaction to "),t("code",[e._v("unjail")]),e._v("\nthemselves, and thus rejoin the validator set.")]),e._v(" "),t("p",[e._v('One of the "design desires" of the '),t("code",[e._v("slashing")]),e._v(" module is that if multiple\ninfractions occur before evidence is executed (and a validator is put in jail),\nthey should only be punished for single worst infraction, but not cumulatively.\nFor example, if the sequence of events is:")]),e._v(" "),t("ol",[t("li",[e._v("Validator A commits Infraction 1 (worth 30% slash)")]),e._v(" "),t("li",[e._v("Validator A commits Infraction 2 (worth 40% slash)")]),e._v(" "),t("li",[e._v("Validator A commits Infraction 3 (worth 35% slash)")]),e._v(" "),t("li",[e._v("Evidence for Infraction 1 reaches state machine (and validator is put in jail)")]),e._v(" "),t("li",[e._v("Evidence for Infraction 2 reaches state machine")]),e._v(" "),t("li",[e._v("Evidence for Infraction 3 reaches state machine")])]),e._v(" "),t("p",[e._v("Only Infraction 2 should have its slash take effect, as it is the highest. This\nis done, so that in the case of the compromise of a validator's consensus key,\nthey will only be punished once, even if the hacker double-signs many blocks.\nBecause, the unjailing has to be done with the validator's operator key, they\nhave a chance to re-secure their consensus key, and then signal that they are\nready using their operator key. We call this period during which we track only\nthe max infraction, the \"slashing period\".")]),e._v(" "),t("p",[e._v("Once, a validator rejoins by unjailing themselves, we begin a new slashing period;\nif they commit a new infraction after unjailing, it gets slashed cumulatively on\ntop of the worst infraction from the previous slashing period.")]),e._v(" "),t("p",[e._v("However, while infractions are grouped based off of the slashing periods, because\nevidence can be submitted up to an "),t("code",[e._v("unbondingPeriod")]),e._v(" after the infraction, we\nstill have to allow for evidence to be submitted for previous slashing periods.\nFor example, if the sequence of events is:")]),e._v(" "),t("ol",[t("li",[e._v("Validator A commits Infraction 1 (worth 30% slash)")]),e._v(" "),t("li",[e._v("Validator A commits Infraction 2 (worth 40% slash)")]),e._v(" "),t("li",[e._v("Evidence for Infraction 1 reaches state machine (and Validator A is put in jail)")]),e._v(" "),t("li",[e._v("Validator A unjails")])]),e._v(" "),t("p",[e._v("We are now in a new slashing period, however we still have to keep the door open\nfor the previous infraction, as the evidence for Infraction 2 may still come in.\nAs the number of slashing periods increase, it creates more complexity as we have\nto keep track of the highest infraction amount for every single slashing period.")]),e._v(" "),t("blockquote",[t("p",[e._v("Note: Currently, according to the "),t("code",[e._v("slashing")]),e._v(" module spec, a new slashing period\nis created every time a validator is unbonded then rebonded. This should probably\nbe changed to jailed/unjailed. See issue "),t("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/issues/3205",target:"_blank",rel:"noopener noreferrer"}},[e._v("#3205"),t("OutboundLink")],1),e._v("\nfor further details. For the remainder of this, I will assume that we only start\na new slashing period when a validator gets unjailed.")])]),e._v(" "),t("p",[e._v("The maximum number of slashing periods is the "),t("code",[e._v("len(UnbondingPeriod) / len(JailPeriod)")]),e._v(".\nThe current defaults in Gaia for the "),t("code",[e._v("UnbondingPeriod")]),e._v(" and "),t("code",[e._v("JailPeriod")]),e._v(" are 3 weeks\nand 2 days, respectively. This means there could potentially be up to 11 slashing\nperiods concurrently being tracked per validator. If we set the "),t("code",[e._v("JailPeriod >= UnbondingPeriod")]),e._v(",\nwe only have to track 1 slashing period (i.e not have to track slashing periods).")]),e._v(" "),t("p",[e._v('Currently, in the jail period implementation, once a validator unjails, all of\ntheir delegators who are delegated to them (haven\'t unbonded / redelegated away),\nstay with them. Given that consensus safety faults are so egregious\n(way more so than liveness faults), it is probably prudent to have delegators not\n"auto-rebond" to the validator.')]),e._v(" "),t("h3",{attrs:{id:"proposal-infinite-jail"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#proposal-infinite-jail"}},[e._v("#")]),e._v(" Proposal: infinite jail")]),e._v(" "),t("p",[e._v('We propose setting the "jail time" for a\nvalidator who commits a consensus safety fault, to '),t("code",[e._v("infinite")]),e._v(' (i.e. a tombstone state).\nThis essentially kicks the validator out of the validator set and does not allow\nthem to re-enter the validator set. All of their delegators (including the operator themselves)\nhave to either unbond or redelegate away. The validator operator can create a new\nvalidator if they would like, with a new operator key and consensus key, but they\nhave to "re-earn" their delegations back.')]),e._v(" "),t("p",[e._v("Implementing the tombstone system and getting rid of the slashing period tracking\nwill make the "),t("code",[e._v("slashing")]),e._v(" module way simpler, especially because we can remove all\nof the hooks defined in the "),t("code",[e._v("slashing")]),e._v(" module consumed by the "),t("code",[e._v("staking")]),e._v(" module\n(the "),t("code",[e._v("slashing")]),e._v(" module still consumes hooks defined in "),t("code",[e._v("staking")]),e._v(").")]),e._v(" "),t("h3",{attrs:{id:"single-slashing-amount"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#single-slashing-amount"}},[e._v("#")]),e._v(" Single slashing amount")]),e._v(" "),t("p",[e._v("Another optimization that can be made is that if we assume that all ABCI faults\nfor Tendermint consensus are slashed at the same level, we don't have to keep\ntrack of \"max slash\". Once an ABCI fault happens, we don't have to worry about\ncomparing potential future ones to find the max.")]),e._v(" "),t("p",[e._v("Currently the only Tendermint ABCI fault is:")]),e._v(" "),t("ul",[t("li",[e._v("Unjustified precommits (double signs)")])]),e._v(" "),t("p",[e._v("It is currently planned to include the following fault in the near future:")]),e._v(" "),t("ul",[t("li",[e._v("Signing a precommit when you're in unbonding phase (needed to make light client bisection safe)")])]),e._v(" "),t("p",[e._v("Given that these faults are both attributable byzantine faults, we will likely\nwant to slash them equally, and thus we can enact the above change.")]),e._v(" "),t("blockquote",[t("p",[e._v("Note: This change may make sense for current Tendermint consensus, but maybe\nnot for a different consensus algorithm or future versions of Tendermint that\nmay want to punish at different levels (for example, partial slashing).")])]),e._v(" "),t("h1",{attrs:{id:"parameters"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#parameters"}},[e._v("#")]),e._v(" Parameters")]),e._v(" "),t("p",[e._v("The slashing module contains the following parameters:")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Key")]),e._v(" "),t("th",[e._v("Type")]),e._v(" "),t("th",[e._v("Example")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("SignedBlocksWindow")]),e._v(" "),t("td",[e._v("string (int64)")]),e._v(" "),t("td",[e._v('"100"')])]),e._v(" "),t("tr",[t("td",[e._v("MinSignedPerWindow")]),e._v(" "),t("td",[e._v("string (dec)")]),e._v(" "),t("td",[e._v('"0.500000000000000000"')])]),e._v(" "),t("tr",[t("td",[e._v("DowntimeJailDuration")]),e._v(" "),t("td",[e._v("string (ns)")]),e._v(" "),t("td",[e._v('"600000000000"')])]),e._v(" "),t("tr",[t("td",[e._v("SlashFractionDoubleSign")]),e._v(" "),t("td",[e._v("string (dec)")]),e._v(" "),t("td",[e._v('"0.050000000000000000"')])]),e._v(" "),t("tr",[t("td",[e._v("SlashFractionDowntime")]),e._v(" "),t("td",[e._v("string (dec)")]),e._v(" "),t("td",[e._v('"0.010000000000000000"')])])])]),e._v(" "),t("h1",{attrs:{id:"cli"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cli"}},[e._v("#")]),e._v(" CLI")]),e._v(" "),t("p",[e._v("A user can query and interact with the "),t("code",[e._v("slashing")]),e._v(" module using the CLI.")]),e._v(" "),t("h2",{attrs:{id:"query"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#query"}},[e._v("#")]),e._v(" Query")]),e._v(" "),t("p",[e._v("The "),t("code",[e._v("query")]),e._v(" commands allow users to query "),t("code",[e._v("slashing")]),e._v(" state.")]),e._v(" "),t("tm-code-block",{staticClass:"codeblock",attrs:{language:"sh",base64:"c2ltZCBxdWVyeSBzbGFzaGluZyAtLWhlbHAK"}}),e._v(" "),t("h3",{attrs:{id:"params-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#params-2"}},[e._v("#")]),e._v(" params")]),e._v(" "),t("p",[e._v("The "),t("code",[e._v("params")]),e._v(" command allows users to query genesis parameters for the slashing module.")]),e._v(" "),t("tm-code-block",{staticClass:"codeblock",attrs:{language:"sh",base64:"c2ltZCBxdWVyeSBzbGFzaGluZyBwYXJhbXMgW2ZsYWdzXQo="}}),e._v(" "),t("p",[e._v("Example:")]),e._v(" "),t("tm-code-block",{staticClass:"codeblock",attrs:{language:"sh",base64:"c2ltZCBxdWVyeSBzbGFzaGluZyBwYXJhbXMK"}}),e._v(" "),t("p",[e._v("Example Output:")]),e._v(" "),t("tm-code-block",{staticClass:"codeblock",attrs:{language:"yml",base64:"ZG93bnRpbWVfamFpbF9kdXJhdGlvbjogNjAwcwptaW5fc2lnbmVkX3Blcl93aW5kb3c6ICZxdW90OzAuNTAwMDAwMDAwMDAwMDAwMDAwJnF1b3Q7CnNpZ25lZF9ibG9ja3Nfd2luZG93OiAmcXVvdDsxMDAmcXVvdDsKc2xhc2hfZnJhY3Rpb25fZG91YmxlX3NpZ246ICZxdW90OzAuMDUwMDAwMDAwMDAwMDAwMDAwJnF1b3Q7CnNsYXNoX2ZyYWN0aW9uX2Rvd250aW1lOiAmcXVvdDswLjAxMDAwMDAwMDAwMDAwMDAwMCZxdW90Owo="}}),e._v(" "),t("h3",{attrs:{id:"signing-info"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#signing-info"}},[e._v("#")]),e._v(" signing-info")]),e._v(" "),t("p",[e._v("The "),t("code",[e._v("signing-info")]),e._v(" command allows users to query signing-info of the validator using consensus public key.")]),e._v(" "),t("tm-code-block",{staticClass:"codeblock",attrs:{language:"sh",base64:"c2ltZCBxdWVyeSBzbGFzaGluZyBzaWduaW5nLWluZm9zIFtmbGFnc10K"}}),e._v(" "),t("p",[e._v("Example:")]),e._v(" "),t("tm-code-block",{staticClass:"codeblock",attrs:{language:"sh",base64:"c2ltZCBxdWVyeSBzbGFzaGluZyBzaWduaW5nLWluZm8gJ3smcXVvdDtAdHlwZSZxdW90OzomcXVvdDsvY29zbW9zLmNyeXB0by5lZDI1NTE5LlB1YktleSZxdW90OywmcXVvdDtrZXkmcXVvdDs6JnF1b3Q7QXV4czM4NjVIcEIvRWZzc1lPemZxTmhFSmp6eXM2akQ1QjZ0UGdDOD0mcXVvdDt9JwoK"}}),e._v(" "),t("p",[e._v("Example Output:")]),e._v(" "),t("tm-code-block",{staticClass:"codeblock",attrs:{language:"yml",base64:"YWRkcmVzczogY29zbW9zdmFsY29uczFucnFzbGQzYXc2bGg2dDA4MmZyZHFjODR1d3huMHQ5NThjCmluZGV4X29mZnNldDogJnF1b3Q7MjA2OCZxdW90OwpqYWlsZWRfdW50aWw6ICZxdW90OzE5NzAtMDEtMDFUMDA6MDA6MDBaJnF1b3Q7Cm1pc3NlZF9ibG9ja3NfY291bnRlcjogJnF1b3Q7MCZxdW90OwpzdGFydF9oZWlnaHQ6ICZxdW90OzAmcXVvdDsKdG9tYnN0b25lZDogZmFsc2UK"}}),e._v(" "),t("h3",{attrs:{id:"signing-infos"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#signing-infos"}},[e._v("#")]),e._v(" signing-infos")]),e._v(" "),t("p",[e._v("The "),t("code",[e._v("signing-infos")]),e._v(" command allows users to query signing infos of all validators.")]),e._v(" "),t("tm-code-block",{staticClass:"codeblock",attrs:{language:"sh",base64:"c2ltZCBxdWVyeSBzbGFzaGluZyBzaWduaW5nLWluZm9zIFtmbGFnc10K"}}),e._v(" "),t("p",[e._v("Example:")]),e._v(" "),t("tm-code-block",{staticClass:"codeblock",attrs:{language:"sh",base64:"c2ltZCBxdWVyeSBzbGFzaGluZyBzaWduaW5nLWluZm9zCg=="}}),e._v(" "),t("p",[e._v("Example Output:")]),e._v(" "),t("tm-code-block",{staticClass:"codeblock",attrs:{language:"yml",base64:"aW5mbzoKLSBhZGRyZXNzOiBjb3Ntb3N2YWxjb25zMW5ycXNsZDNhdzZsaDZ0MDgyZnJkcWM4NHV3eG4wdDk1OGMKICBpbmRleF9vZmZzZXQ6ICZxdW90OzIwNzUmcXVvdDsKICBqYWlsZWRfdW50aWw6ICZxdW90OzE5NzAtMDEtMDFUMDA6MDA6MDBaJnF1b3Q7CiAgbWlzc2VkX2Jsb2Nrc19jb3VudGVyOiAmcXVvdDswJnF1b3Q7CiAgc3RhcnRfaGVpZ2h0OiAmcXVvdDswJnF1b3Q7CiAgdG9tYnN0b25lZDogZmFsc2UKcGFnaW5hdGlvbjoKICBuZXh0X2tleTogbnVsbAogIHRvdGFsOiAmcXVvdDswJnF1b3Q7Cg=="}}),e._v(" "),t("h2",{attrs:{id:"transactions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#transactions"}},[e._v("#")]),e._v(" Transactions")]),e._v(" "),t("p",[e._v("The "),t("code",[e._v("tx")]),e._v(" commands allow users to interact with the "),t("code",[e._v("slashing")]),e._v(" module.")]),e._v(" "),t("tm-code-block",{staticClass:"codeblock",attrs:{language:"bash",base64:"c2ltZCB0eCBzbGFzaGluZyAtLWhlbHAK"}}),e._v(" "),t("h3",{attrs:{id:"unjail-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#unjail-2"}},[e._v("#")]),e._v(" unjail")]),e._v(" "),t("p",[e._v("The "),t("code",[e._v("unjail")]),e._v(" command allows users to unjail a validator previously jailed for downtime.")]),e._v(" "),t("tm-code-block",{staticClass:"codeblock",attrs:{language:"bash",base64:"ICBzaW1kIHR4IHNsYXNoaW5nIHVuamFpbCAtLWZyb20gbXlrZXkgW2ZsYWdzXQo="}}),e._v(" "),t("p",[e._v("Example:")]),e._v(" "),t("tm-code-block",{staticClass:"codeblock",attrs:{language:"bash",base64:"c2ltZCB0eCBzbGFzaGluZyB1bmphaWwgLS1mcm9tIG15a2V5Cg=="}}),e._v(" "),t("h2",{attrs:{id:"grpc"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#grpc"}},[e._v("#")]),e._v(" gRPC")]),e._v(" "),t("p",[e._v("A user can query the "),t("code",[e._v("slashing")]),e._v(" module using gRPC endpoints.")]),e._v(" "),t("h3",{attrs:{id:"params-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#params-3"}},[e._v("#")]),e._v(" Params")]),e._v(" "),t("p",[e._v("The "),t("code",[e._v("Params")]),e._v(" endpoint allows users to query the parameters of slashing module.")]),e._v(" "),t("tm-code-block",{staticClass:"codeblock",attrs:{language:"sh",base64:"Y29zbW9zLnNsYXNoaW5nLnYxYmV0YTEuUXVlcnkvUGFyYW1zCg=="}}),e._v(" "),t("p",[e._v("Example:")]),e._v(" "),t("tm-code-block",{staticClass:"codeblock",attrs:{language:"sh",base64:"Z3JwY3VybCAtcGxhaW50ZXh0IGxvY2FsaG9zdDo5MDkwIGNvc21vcy5zbGFzaGluZy52MWJldGExLlF1ZXJ5L1BhcmFtcwo="}}),e._v(" "),t("p",[e._v("Example Output:")]),e._v(" "),t("tm-code-block",{staticClass:"codeblock",attrs:{language:"json",base64:"ewogICZxdW90O3BhcmFtcyZxdW90OzogewogICAgJnF1b3Q7c2lnbmVkQmxvY2tzV2luZG93JnF1b3Q7OiAmcXVvdDsxMDAmcXVvdDssCiAgICAmcXVvdDttaW5TaWduZWRQZXJXaW5kb3cmcXVvdDs6ICZxdW90O05UQXdNREF3TURBd01EQXdNREF3TURBdyZxdW90OywKICAgICZxdW90O2Rvd250aW1lSmFpbER1cmF0aW9uJnF1b3Q7OiAmcXVvdDs2MDBzJnF1b3Q7LAogICAgJnF1b3Q7c2xhc2hGcmFjdGlvbkRvdWJsZVNpZ24mcXVvdDs6ICZxdW90O05UQXdNREF3TURBd01EQXdNREF3TURBPSZxdW90OywKICAgICZxdW90O3NsYXNoRnJhY3Rpb25Eb3dudGltZSZxdW90OzogJnF1b3Q7TVRBd01EQXdNREF3TURBd01EQXdNREE9JnF1b3Q7CiAgfQp9Cg=="}}),e._v(" "),t("h3",{attrs:{id:"signinginfo"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#signinginfo"}},[e._v("#")]),e._v(" SigningInfo")]),e._v(" "),t("p",[e._v("The SigningInfo queries the signing info of given cons address.")]),e._v(" "),t("tm-code-block",{staticClass:"codeblock",attrs:{language:"sh",base64:"Y29zbW9zLnNsYXNoaW5nLnYxYmV0YTEuUXVlcnkvU2lnbmluZ0luZm8K"}}),e._v(" "),t("p",[e._v("Example:")]),e._v(" "),t("tm-code-block",{staticClass:"codeblock",attrs:{language:"sh",base64:"Z3JwY3VybCAtcGxhaW50ZXh0IC1kICd7JnF1b3Q7Y29uc19hZGRyZXNzJnF1b3Q7OiZxdW90O2Nvc21vc3ZhbGNvbnMxbnJxc2xkM2F3NmxoNnQwODJmcmRxYzg0dXd4bjB0OTU4YyZxdW90O30nIGxvY2FsaG9zdDo5MDkwIGNvc21vcy5zbGFzaGluZy52MWJldGExLlF1ZXJ5L1NpZ25pbmdJbmZvCg=="}}),e._v(" "),t("p",[e._v("Example Output:")]),e._v(" "),t("tm-code-block",{staticClass:"codeblock",attrs:{language:"json",base64:"ewogICZxdW90O3ZhbFNpZ25pbmdJbmZvJnF1b3Q7OiB7CiAgICAmcXVvdDthZGRyZXNzJnF1b3Q7OiAmcXVvdDtjb3Ntb3N2YWxjb25zMW5ycXNsZDNhdzZsaDZ0MDgyZnJkcWM4NHV3eG4wdDk1OGMmcXVvdDssCiAgICAmcXVvdDtpbmRleE9mZnNldCZxdW90OzogJnF1b3Q7MzQ5MyZxdW90OywKICAgICZxdW90O2phaWxlZFVudGlsJnF1b3Q7OiAmcXVvdDsxOTcwLTAxLTAxVDAwOjAwOjAwWiZxdW90OwogIH0KfQo="}}),e._v(" "),t("h3",{attrs:{id:"signinginfos"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#signinginfos"}},[e._v("#")]),e._v(" SigningInfos")]),e._v(" "),t("p",[e._v("The SigningInfos queries signing info of all validators.")]),e._v(" "),t("tm-code-block",{staticClass:"codeblock",attrs:{language:"sh",base64:"Y29zbW9zLnNsYXNoaW5nLnYxYmV0YTEuUXVlcnkvU2lnbmluZ0luZm9zCg=="}}),e._v(" "),t("p",[e._v("Example:")]),e._v(" "),t("tm-code-block",{staticClass:"codeblock",attrs:{language:"sh",base64:"Z3JwY3VybCAtcGxhaW50ZXh0IGxvY2FsaG9zdDo5MDkwIGNvc21vcy5zbGFzaGluZy52MWJldGExLlF1ZXJ5L1NpZ25pbmdJbmZvcwo="}}),e._v(" "),t("p",[e._v("Example Output:")]),e._v(" "),t("tm-code-block",{staticClass:"codeblock",attrs:{language:"json",base64:"ewogICZxdW90O2luZm8mcXVvdDs6IFsKICAgIHsKICAgICAgJnF1b3Q7YWRkcmVzcyZxdW90OzogJnF1b3Q7Y29zbW9zdmFsY29uczFucnFzbGt3ZDNwejA5NmxoNnQwODJmcmRxYzg0dXd4bjB0OTU4YyZxdW90OywKICAgICAgJnF1b3Q7aW5kZXhPZmZzZXQmcXVvdDs6ICZxdW90OzI0NjcmcXVvdDssCiAgICAgICZxdW90O2phaWxlZFVudGlsJnF1b3Q7OiAmcXVvdDsxOTcwLTAxLTAxVDAwOjAwOjAwWiZxdW90OwogICAgfQogIF0sCiAgJnF1b3Q7cGFnaW5hdGlvbiZxdW90OzogewogICAgJnF1b3Q7dG90YWwmcXVvdDs6ICZxdW90OzEmcXVvdDsKICB9Cn0K"}}),e._v(" "),t("h2",{attrs:{id:"rest"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rest"}},[e._v("#")]),e._v(" REST")]),e._v(" "),t("p",[e._v("A user can query the "),t("code",[e._v("slashing")]),e._v(" module using REST endpoints.")]),e._v(" "),t("h3",{attrs:{id:"params-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#params-4"}},[e._v("#")]),e._v(" Params")]),e._v(" "),t("tm-code-block",{staticClass:"codeblock",attrs:{language:"sh",base64:"L2Nvc21vcy9zbGFzaGluZy92MWJldGExL3BhcmFtcwo="}}),e._v(" "),t("p",[e._v("Example:")]),e._v(" "),t("tm-code-block",{staticClass:"codeblock",attrs:{language:"sh",base64:"Y3VybCAmcXVvdDtsb2NhbGhvc3Q6MTMxNy9jb3Ntb3Mvc2xhc2hpbmcvdjFiZXRhMS9wYXJhbXMmcXVvdDsK"}}),e._v(" "),t("p",[e._v("Example Output:")]),e._v(" "),t("tm-code-block",{staticClass:"codeblock",attrs:{language:"json",base64:"ewogICZxdW90O3BhcmFtcyZxdW90OzogewogICAgJnF1b3Q7c2lnbmVkX2Jsb2Nrc193aW5kb3cmcXVvdDs6ICZxdW90OzEwMCZxdW90OywKICAgICZxdW90O21pbl9zaWduZWRfcGVyX3dpbmRvdyZxdW90OzogJnF1b3Q7MC41MDAwMDAwMDAwMDAwMDAwMDAmcXVvdDssCiAgICAmcXVvdDtkb3dudGltZV9qYWlsX2R1cmF0aW9uJnF1b3Q7OiAmcXVvdDs2MDBzJnF1b3Q7LAogICAgJnF1b3Q7c2xhc2hfZnJhY3Rpb25fZG91YmxlX3NpZ24mcXVvdDs6ICZxdW90OzAuMDUwMDAwMDAwMDAwMDAwMDAwJnF1b3Q7LAogICAgJnF1b3Q7c2xhc2hfZnJhY3Rpb25fZG93bnRpbWUmcXVvdDs6ICZxdW90OzAuMDEwMDAwMDAwMDAwMDAwMDAwJnF1b3Q7Cn0K"}}),e._v(" "),t("h3",{attrs:{id:"signing-info-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#signing-info-2"}},[e._v("#")]),e._v(" signing_info")]),e._v(" "),t("tm-code-block",{staticClass:"codeblock",attrs:{language:"sh",base64:"L2Nvc21vcy9zbGFzaGluZy92MWJldGExL3NpZ25pbmdfaW5mb3MvJXMK"}}),e._v(" "),t("p",[e._v("Example:")]),e._v(" "),t("tm-code-block",{staticClass:"codeblock",attrs:{language:"sh",base64:"Y3VybCAmcXVvdDtsb2NhbGhvc3Q6MTMxNy9jb3Ntb3Mvc2xhc2hpbmcvdjFiZXRhMS9zaWduaW5nX2luZm9zL2Nvc21vc3ZhbGNvbnMxbnJxc2xrd2QzcHowOTZsaDZ0MDgyZnJkcWM4NHV3eG4wdDk1OGMmcXVvdDsK"}}),e._v(" "),t("p",[e._v("Example Output:")]),e._v(" "),t("tm-code-block",{staticClass:"codeblock",attrs:{language:"json",base64:"ewogICZxdW90O3ZhbF9zaWduaW5nX2luZm8mcXVvdDs6IHsKICAgICZxdW90O2FkZHJlc3MmcXVvdDs6ICZxdW90O2Nvc21vc3ZhbGNvbnMxbnJxc2xrd2QzcHowOTZsaDZ0MDgyZnJkcWM4NHV3eG4wdDk1OGMmcXVvdDssCiAgICAmcXVvdDtzdGFydF9oZWlnaHQmcXVvdDs6ICZxdW90OzAmcXVvdDssCiAgICAmcXVvdDtpbmRleF9vZmZzZXQmcXVvdDs6ICZxdW90OzQxODQmcXVvdDssCiAgICAmcXVvdDtqYWlsZWRfdW50aWwmcXVvdDs6ICZxdW90OzE5NzAtMDEtMDFUMDA6MDA6MDBaJnF1b3Q7LAogICAgJnF1b3Q7dG9tYnN0b25lZCZxdW90OzogZmFsc2UsCiAgICAmcXVvdDttaXNzZWRfYmxvY2tzX2NvdW50ZXImcXVvdDs6ICZxdW90OzAmcXVvdDsKICB9Cn0K"}}),e._v(" "),t("h3",{attrs:{id:"signing-infos-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#signing-infos-2"}},[e._v("#")]),e._v(" signing_infos")]),e._v(" "),t("tm-code-block",{staticClass:"codeblock",attrs:{language:"sh",base64:"L2Nvc21vcy9zbGFzaGluZy92MWJldGExL3NpZ25pbmdfaW5mb3MK"}}),e._v(" "),t("p",[e._v("Example:")]),e._v(" "),t("tm-code-block",{staticClass:"codeblock",attrs:{language:"sh",base64:"Y3VybCAmcXVvdDtsb2NhbGhvc3Q6MTMxNy9jb3Ntb3Mvc2xhc2hpbmcvdjFiZXRhMS9zaWduaW5nX2luZm9zCg=="}}),e._v(" "),t("p",[e._v("Example Output:")]),e._v(" "),t("tm-code-block",{staticClass:"codeblock",attrs:{language:"json",base64:"ewogICZxdW90O2luZm8mcXVvdDs6IFsKICAgIHsKICAgICAgJnF1b3Q7YWRkcmVzcyZxdW90OzogJnF1b3Q7Y29zbW9zdmFsY29uczFucnFzbGt3ZDNwejA5NmxoNnQwODJmcmRxYzg0dXd4bjB0OTU4YyZxdW90OywKICAgICAgJnF1b3Q7c3RhcnRfaGVpZ2h0JnF1b3Q7OiAmcXVvdDswJnF1b3Q7LAogICAgICAmcXVvdDtpbmRleF9vZmZzZXQmcXVvdDs6ICZxdW90OzQxNjkmcXVvdDssCiAgICAgICZxdW90O2phaWxlZF91bnRpbCZxdW90OzogJnF1b3Q7MTk3MC0wMS0wMVQwMDowMDowMFomcXVvdDssCiAgICAgICZxdW90O3RvbWJzdG9uZWQmcXVvdDs6IGZhbHNlLAogICAgICAmcXVvdDttaXNzZWRfYmxvY2tzX2NvdW50ZXImcXVvdDs6ICZxdW90OzAmcXVvdDsKICAgIH0KICBdLAogICZxdW90O3BhZ2luYXRpb24mcXVvdDs6IHsKICAgICZxdW90O25leHRfa2V5JnF1b3Q7OiBudWxsLAogICAgJnF1b3Q7dG90YWwmcXVvdDs6ICZxdW90OzEmcXVvdDsKICB9Cn0K"}})],1)}),[],!1,null,null,null);a.default=n.exports}}]);